plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 28
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //lifecycle相关
    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel:2.5.1")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata:2.5.1")
    // 仅Lifecycles (没有 ViewModel 或 LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime:2.5.1")
    // 为 ViewModel 保存状态模块
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.1")
    // 或者 - 如果使用 Java8，请使用以下代码代替生命周期编译器
    implementation("androidx.lifecycle:lifecycle-common-java8:2.5.1")
    // 可选 - 在服务中实现 LifecycleOwner 的助手
    implementation("androidx.lifecycle:lifecycle-service:2.5.1")
    // 可选 - ProcessLifecycleOwner 为整个应用程序进程提供生命周期
    implementation("androidx.lifecycle:lifecycle-process:2.5.1")
    // 可选 - 对 LiveData 的 ReactiveStreams 支持
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.5.1")

}